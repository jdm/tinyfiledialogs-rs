diff --git a/libtinyfiledialogs/tinyfiledialogs.c b/libtinyfiledialogs/tinyfiledialogs.c
index 30865fe..de38db6 100644
--- a/libtinyfiledialogs/tinyfiledialogs.c
+++ b/libtinyfiledialogs/tinyfiledialogs.c
@@ -182,6 +182,14 @@ char tinyfd_needs[] = "\
 #pragma warning(disable:4706) /* allows usage of strncpy, strcpy, strcat, sprintf, fopen */
 #endif
 
+#ifdef _WIN64
+#include <ShellScalingApi.h>
+
+#pragma comment(linker,"\"/manifestdependency:type='win32' \
+name='Microsoft.Windows.Common-Controls' version='6.0.0.0' \
+processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\"")
+#endif // _WIN64
+
 static int getenvDISPLAY(void)
 {
 	return tinyfd_assumeGraphicDisplay || getenv("DISPLAY");
@@ -1060,6 +1068,9 @@ int tinyfd_messageBoxW(
         wchar_t const * aIconType, /* "info" "warning" "error" "question" */
         int aDefaultButton) /* 0 for cancel/no , 1 for ok/yes , 2 for no in yesnocancel */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE);
+#endif
         int lBoxReturnValue;
         UINT aCode;
 
@@ -1130,6 +1141,9 @@ int tinyfd_notifyPopupW(
         wchar_t const * aMessage, /* NULL or L"" may contain \n \t */
         wchar_t const * aIconType) /* L"info" L"warning" L"error" */
 {
+#ifdef _WIN64
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         wchar_t * lDialogString;
         size_t lTitleLen;
         size_t lMessageLen;
@@ -1202,6 +1216,9 @@ wchar_t * tinyfd_inputBoxW(
         wchar_t const * aMessage, /* NULL or L"" (\n and \t have no effect) */
         wchar_t const * aDefaultInput) /* L"" , if NULL it's a passwordBox */
 {
+#ifdef _WIN64
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         static wchar_t lBuff[MAX_PATH_OR_CMD];
         wchar_t * lDialogString;
         FILE * lIn;
@@ -1273,6 +1290,7 @@ wchar_t * tinyfd_inputBoxW(
 
                 wcscat(lDialogString, L"tinyfiledialogsTopWindow");
                 wcscat(lDialogString, L"</title>\n\
+<META HTTP-EQUIV=\"MSThemeCompatible\" CONTENT=\"yes\">\n\
 <HTA:APPLICATION\n\
 ID = 'tinyfdHTA'\n\
 APPLICATIONNAME = 'tinyfd_inputBox'\n\
@@ -1479,6 +1497,9 @@ wchar_t * tinyfd_saveFileDialogW(
         wchar_t const * const * aFilterPatterns, /* NULL or {"*.jpg","*.png"} */
         wchar_t const * aSingleFilterDescription) /* NULL or "image files" */
 {
+#ifdef _WIN64
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         static wchar_t lBuff[MAX_PATH_OR_CMD];
         wchar_t lDirname[MAX_PATH_OR_CMD];
         wchar_t lDialogString[MAX_PATH_OR_CMD];
@@ -1582,6 +1603,9 @@ wchar_t * tinyfd_openFileDialogW(
 		wchar_t const * aSingleFilterDescription, /* NULL or "image files" */
         int aAllowMultipleSelects) /* 0 or 1 ; -1 to free allocated memory and return */
 {
+#ifdef _WIN64
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         size_t lLengths[MAX_MULTIPLE_FILES];
         wchar_t lDirname[MAX_PATH_OR_CMD];
         wchar_t lFilterPatterns[MAX_PATH_OR_CMD] = L"";
@@ -1769,6 +1793,9 @@ wchar_t * tinyfd_selectFolderDialogW(
         wchar_t const * aTitle, /* NULL or "" */
         wchar_t const * aDefaultPath) /* NULL or "" */
 {
+#ifdef _WIN64 
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         static wchar_t lBuff[MAX_PATH_OR_CMD];
 		wchar_t * lRetval;
 
@@ -1820,6 +1847,9 @@ wchar_t * tinyfd_colorChooserW(
         unsigned char const aDefaultRGB[3], /* { 0 , 255 , 255 } */
         unsigned char aoResultRGB[3]) /* { 0 , 0 , 0 } */
 {
+#ifdef _WIN64 
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE);
+#endif
         static wchar_t lResultHexRGB[8];
         CHOOSECOLORW cc;
         COLORREF crCustColors[16];
@@ -1886,6 +1916,9 @@ static int messageBoxWinGui(
 	char const * aIconType, /* "info" "warning" "error" "question" */
 	int aDefaultButton) /* 0 for cancel/no , 1 for ok/yes , 2 for no in yesnocancel */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	int lIntRetVal;
 	wchar_t lTitle[128] = L"";
 	wchar_t * lMessage = NULL;
@@ -1932,6 +1965,9 @@ static int notifyWinGui(
 	char const * aMessage, /* NULL or "" may NOT contain \n nor \t */
 	char const * aIconType)
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	wchar_t lTitle[128] = L"";
 	wchar_t * lMessage = NULL;
 	wchar_t lIconType[16] = L"";
@@ -1971,6 +2007,9 @@ static int inputBoxWinGui(
 	char const * aMessage, /* NULL or "" may NOT contain \n nor \t */
 	char const * aDefaultInput) /* "" , if NULL it's a passwordBox */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	wchar_t lTitle[128] = L"";
 	wchar_t * lMessage = NULL;
 	wchar_t lDefaultInput[MAX_PATH_OR_CMD] = L"";
@@ -2024,6 +2063,9 @@ static char * saveFileDialogWinGui(
 	char const * const * aFilterPatterns, /* NULL or {"*.jpg","*.png"} */
 	char const * aSingleFilterDescription) /* NULL or "image files" */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	wchar_t lTitle[128] = L"";
 	wchar_t lDefaultPathAndFile[MAX_PATH_OR_CMD] = L"";
 	wchar_t lSingleFilterDescription[128] = L"";
@@ -2096,6 +2138,9 @@ static char * openFileDialogWinGui(
 	char const * aSingleFilterDescription, /* NULL or "image files" */
 	int aAllowMultipleSelects) /* 0 or 1 */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	wchar_t lTitle[128] = L"";
 	wchar_t lDefaultPathAndFile[MAX_PATH_OR_CMD] = L"";
 	wchar_t lSingleFilterDescription[128] = L"";
@@ -2161,6 +2206,9 @@ static char * selectFolderDialogWinGui(
 	char const * aTitle, /*  NULL or "" */
 	char const * aDefaultPath) /* NULL or "" */
 {
+#ifdef _WIN64 
+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
 	wchar_t lTitle[128] = L"";
 	wchar_t lDefaultPath[MAX_PATH_OR_CMD] = L"";
 	wchar_t * lTmpWChar;
@@ -2202,6 +2250,9 @@ static char * colorChooserWinGui(
         unsigned char const aDefaultRGB[3], /* { 0 , 255 , 255 } */
         unsigned char aoResultRGB[3]) /* { 0 , 0 , 0 } */
 {
+#ifdef _WIN64 
+        SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
+#endif
         static char lResultHexRGB[8];
 
         wchar_t lTitle[128];
diff --git a/patches/0002_WindowsHidpiVisualStyle.patch b/patches/0002_WindowsHidpiVisualStyle.patch
index 46369f1..56b279b 100644
--- a/patches/0002_WindowsHidpiVisualStyle.patch
+++ b/patches/0002_WindowsHidpiVisualStyle.patch
@@ -1,217 +0,0 @@
-diff --git a/libtinyfiledialogs/tinyfiledialogs.c b/libtinyfiledialogs/tinyfiledialogs.c
-index 700cce6..14619c7 100644
---- a/libtinyfiledialogs/tinyfiledialogs.c
-+++ b/libtinyfiledialogs/tinyfiledialogs.c
-@@ -209,6 +209,14 @@ char const tinyfd_needs[] = "\
- #pragma warning(disable:4706) /* allows usage of strncpy, strcpy, strcat, sprintf, fopen */
- #endif
- 
-+#ifdef _WIN64
-+#include <ShellScalingApi.h>
-+
-+#pragma comment(linker,"\"/manifestdependency:type='win32' \
-+name='Microsoft.Windows.Common-Controls' version='6.0.0.0' \
-+processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\"")
-+#endif // _WIN64
-+
- static char * getPathWithoutFinalSlash(
-         char * const aoDestination, /* make sure it is allocated, use _MAX_PATH */
-         char const * const aSource) /* aoDestination and aSource can be the same */
-@@ -933,6 +941,9 @@ int tinyfd_messageBoxW(
-         wchar_t const * const aIconType, /* "info" "warning" "error" "question" */
-         int const aDefaultButton) /* 0 for cancel/no , 1 for ok/yes , 2 for no in yesnocancel */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE);
-+#endif
-         int lBoxReturnValue;
-         UINT aCode;
- 
-@@ -1001,6 +1012,9 @@ static int messageBoxWinGui8(
-         char const * const aIconType, /* "info" "warning" "error" "question" */
-         int const aDefaultButton) /* 0 for cancel/no , 1 for ok/yes , 2 for no in yesnocancel */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         int lIntRetVal;
-         wchar_t * lTitle;
-         wchar_t * lMessage;
-@@ -1030,6 +1044,9 @@ int tinyfd_notifyPopupW(
-         wchar_t const * const aMessage, /* NULL or L"" may contain \n \t */
-         wchar_t const * const aIconType) /* L"info" L"warning" L"error" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lDialogString;
-         size_t lTitleLen;
-         size_t lMessageLen;
-@@ -1098,6 +1115,9 @@ static int notifyWinGui(
-         char const * const aMessage, /* NULL or "" may NOT contain \n nor \t */
-         char const * const aIconType) 
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lTitle;
-         wchar_t * lMessage;
-         wchar_t * lIconType;
-@@ -1129,6 +1149,9 @@ wchar_t const * tinyfd_inputBoxW(
-         wchar_t const * const aMessage, /* NULL or L"" may NOT contain \n nor \t */
-         wchar_t const * const aDefaultInput) /* L"" , if NULL it's a passwordBox */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static wchar_t lBuff[MAX_PATH_OR_CMD];
-         wchar_t * lDialogString;
-         FILE * lIn;
-@@ -1196,6 +1219,7 @@ wchar_t const * tinyfd_inputBoxW(
- 
-                 wcscat(lDialogString, L"tinyfiledialogsTopWindow");
-                 wcscat(lDialogString, L"</title>\n\
-+<META HTTP-EQUIV=\"MSThemeCompatible\" CONTENT=\"yes\">\n\
- <HTA:APPLICATION\n\
- ID = 'tinyfdHTA'\n\
- APPLICATIONNAME = 'tinyfd_inputBox'\n\
-@@ -1403,6 +1427,9 @@ static char const * inputBoxWinGui(
-         char const * const aMessage, /* NULL or "" may NOT contain \n nor \t */
-         char const * const aDefaultInput) /* "" , if NULL it's a passwordBox */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lTitle;
-         wchar_t * lMessage;
-         wchar_t * lDefaultInput;
-@@ -1455,6 +1482,9 @@ wchar_t const * tinyfd_saveFileDialogW(
-         wchar_t const * const * const aFilterPatterns, /* NULL or {"*.jpg","*.png"} */
-         wchar_t const * const aSingleFilterDescription) /* NULL or "image files" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static wchar_t lBuff[MAX_PATH_OR_CMD];
-         wchar_t lDirname[MAX_PATH_OR_CMD];
-         wchar_t lDialogString[MAX_PATH_OR_CMD];
-@@ -1547,6 +1577,9 @@ static char const * saveFileDialogWinGui8(
-         char const * const * const aFilterPatterns, /* NULL or {"*.jpg","*.png"} */
-         char const * const aSingleFilterDescription) /* NULL or "image files" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lTitle;
-         wchar_t * lDefaultPathAndFile;
-         wchar_t * lSingleFilterDescription;
-@@ -1603,6 +1636,9 @@ wchar_t const * tinyfd_openFileDialogW(
-         wchar_t const * const aSingleFilterDescription, /* NULL or "image files" */
-         int const aAllowMultipleSelects) /* 0 or 1 */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static wchar_t lBuff[MAX_MULTIPLE_FILES*MAX_PATH_OR_CMD];
-                 
-         size_t lLengths[MAX_MULTIPLE_FILES];
-@@ -1734,6 +1770,9 @@ static char const * openFileDialogWinGui8(
-         char const * const aSingleFilterDescription, /* NULL or "image files" */
-         int const aAllowMultipleSelects) /* 0 or 1 */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lTitle;
-         wchar_t * lDefaultPathAndFile;
-         wchar_t * lSingleFilterDescription;
-@@ -1805,6 +1844,9 @@ wchar_t const * tinyfd_selectFolderDialogW(
-         wchar_t const * const aTitle, /* NULL or "" */
-         wchar_t const * const aDefaultPath) /* NULL or "" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static wchar_t lBuff[MAX_PATH_OR_CMD];
-                 
-         BROWSEINFOW bInfo;
-@@ -1846,6 +1888,9 @@ static char const * selectFolderDialogWinGui8(
-         char const * const aTitle , /*  NULL or "" */
-         char const * const aDefaultPath ) /* NULL or "" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         wchar_t * lTitle;
-         wchar_t * lDefaultPath;
-         wchar_t const * lTmpWChar;
-@@ -1880,6 +1925,9 @@ wchar_t const * tinyfd_colorChooserW(
-         unsigned char const aDefaultRGB[3], /* { 0 , 255 , 255 } */
-         unsigned char aoResultRGB[3]) /* { 0 , 0 , 0 } */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE);
-+#endif
-         static wchar_t lResultHexRGB[8];
-         CHOOSECOLORW cc;
-         COLORREF crCustColors[16];
-@@ -1942,6 +1990,9 @@ static char const * colorChooserWinGui8(
-         unsigned char const aDefaultRGB[3], /* { 0 , 255 , 255 } */
-         unsigned char aoResultRGB[3]) /* { 0 , 0 , 0 } */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static char lResultHexRGB[8];
- 
-         wchar_t * lTitle;
-@@ -1980,6 +2031,9 @@ static int messageBoxWinGuiA(
-     char const * const aIconType , /* "info" "warning" "error" "question" */
-     int const aDefaultButton ) /* 0 for cancel/no , 1 for ok/yes , 2 for no in yesnocancel */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         int lBoxReturnValue;
-     UINT aCode ;
-         
-@@ -2067,6 +2121,9 @@ static char const * saveFileDialogWinGuiA(
-     char const * const * const aFilterPatterns , /* NULL or {"*.jpg","*.png"} */
-     char const * const aSingleFilterDescription ) /* NULL or "image files" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         char lDirname [MAX_PATH_OR_CMD] ;
-         char lDialogString[MAX_PATH_OR_CMD];
-         char lFilterPatterns[MAX_PATH_OR_CMD] = "";
-@@ -2157,6 +2214,9 @@ static char const * openFileDialogWinGuiA(
-     char const * const aSingleFilterDescription , /* NULL or "image files" */
-     int const aAllowMultipleSelects ) /* 0 or 1 */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         char lDirname [MAX_PATH_OR_CMD] ;
-         char lFilterPatterns[MAX_PATH_OR_CMD] = "";
-         char lDialogString[MAX_PATH_OR_CMD] ;
-@@ -2282,6 +2342,9 @@ static char const * selectFolderDialogWinGuiA(
-         char const * const aTitle , /*  NULL or "" */
-         char const * const aDefaultPath ) /* NULL or "" */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         BROWSEINFOA bInfo ;
-         LPITEMIDLIST lpItem ;
-         HRESULT lHResult ;
-@@ -2324,6 +2387,9 @@ static char const * colorChooserWinGuiA(
-         unsigned char const aDefaultRGB[3], /* { 0 , 255 , 255 } */
-         unsigned char aoResultRGB[3]) /* { 0 , 0 , 0 } */
- {
-+#ifdef _WIN64 
-+	SetProcessDpiAwareness(PROCESS_PER_MONITOR_DPI_AWARE); 
-+#endif
-         static char lResultHexRGB[8];
- 
-         CHOOSECOLORA cc;
